# ----------------------------------------------------------------------------------------------------
# MAST 679H - Final Project
# ----------------------------------------------------------------------------------------------------
# Presented by
# Taban AKBARZADEH
# Edwin H. NG
# Gabriel LEMYRE
# Remi VINCENT
# ----------------------------------------------------------------------------------------------------
# Presented to
#Frederic GODIN
# ----------------------------------------------------------------------------------------------------
# April 15th, 2018
# ----------------------------------------------------------------------------------------------------
rm(list=ls())
#set working directory
path <- '~/Documents/GitHub/MAST679H/Final_Project'
setwd(path.expand(path)) # Setting path
options(max.print=100000)
source('tabMaker.R')
#install.packages('MASS')
library('MASS')
#install.packages('readxl')
library(readxl)
#install.packages('data.table')
library(data.table) # Package to use rbindlist()
# Format scientifique pour les valeurs numériques avec maximum d décimales
Sc.Format <- function(obj,d){
Sc.Format <- formatC(obj, format = "e", digits = d)
}
# Rounding with n zeros function <- Returns a string and not a numeric type
s <- function(x,n){
sprintf("%.3f", round(x,n))
}
# ——————————————————————————————————————————————————————————————————————————————————————————————
# //////////////////////////////////////////////////////////////////////////////////////////////
# DATASET EXPLORATION —————————————————————————————————————————————————————————————————————————
# \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
# ——————————————————————————————————————————————————————————————————————————————————————————————
Monthly_temperature <- data.frame(read_excel("dataset_Creation/Monthly_temperature.xlsx"))
Carbon_data <- data.frame(read_excel("dataset_Creation/Carbon Emission Tons.xlsx")[-1,])[-265,]
Years.Temperature <- Monthly_temperature[,1]
Monthly_temperature_d <- Monthly_temperature[,-1]
rownames(Monthly_temperature_d) <- Years.Temperature
dim(Monthly_temperature_d)
Years.Carbon <- Carbon_data[,1]
Carbon_data_d <- Carbon_data[,-1]
rownames(Carbon_data_d) <- Years.Carbon
dim(Carbon_data_d)
data <- t(rbindlist(list(Carbon_data_d=data.frame(t(Carbon_data_d)),
Monthly_temperature_d=data.frame(t(Monthly_temperature_d))),
use.names=TRUE,
fill=TRUE))
Years.Span.min <- c(min(Years.Temperature),min(Years.Carbon))
Years.Span.max <- c(max(Years.Temperature),max(Years.Carbon))
Dates <- seq(from=min(Years.Span.min),
to=max(Years.Span.max),
by=1)
Variable.Titles <- c("Total","Gas","Liquids","Solids","Production","Flaring","Capita","jan","feb","mar","apr","may","jun","july","aug","sep",'oct','nov','dec')
rownames(data) <- Dates
colnames(data) <- Variable.Titles
data
##################################################################
#################################### This would be the spline estimates for the missing months data assuming first data = January##############################
Carbon_Month = spline(CarbonEmissions,y=NULL, n =12*length(CarbonEmissions))$y
# ----------------------------------------------------------------------------------------------------
# MAST 679H - Final Project
# ----------------------------------------------------------------------------------------------------
# Presented by
# Taban AKBARZADEH
# Edwin H. NG
# Gabriel LEMYRE
# Remi VINCENT
# ----------------------------------------------------------------------------------------------------
# Presented to
#Frederic GODIN
# ----------------------------------------------------------------------------------------------------
# April 15th, 2018
# ----------------------------------------------------------------------------------------------------
rm(list=ls())
#set working directory
path <- '~/Documents/GitHub/MAST679H/Final_Project'
setwd(path.expand(path)) # Setting path
options(max.print=100000)
source('tabMaker.R')
install.packages('MASS')
library('MASS')
install.packages('readxl')
install.packages("MASS")
# ----------------------------------------------------------------------------------------------------
# MAST 679H - Final Project
# ----------------------------------------------------------------------------------------------------
# Presented by
# Taban AKBARZADEH
# Edwin H. NG
# Gabriel LEMYRE
# Remi VINCENT
# ----------------------------------------------------------------------------------------------------
# Presented to
#Frederic GODIN
# ----------------------------------------------------------------------------------------------------
# April 15th, 2018
# ----------------------------------------------------------------------------------------------------
rm(list=ls())
#set working directory
path <- '~/Documents/GitHub/MAST679H/Final_Project'
setwd(path.expand(path)) # Setting path
options(max.print=100000)
source('tabMaker.R')
#install.packages('MASS')
library('MASS')
#install.packages('readxl')
library(readxl)
#install.packages('data.table')
library(data.table) # Package to use rbindlist()
# Format scientifique pour les valeurs numériques avec maximum d décimales
Sc.Format <- function(obj,d){
Sc.Format <- formatC(obj, format = "e", digits = d)
}
# Rounding with n zeros function <- Returns a string and not a numeric type
s <- function(x,n){
sprintf("%.3f", round(x,n))
}
# ——————————————————————————————————————————————————————————————————————————————————————————————
# //////////////////////////////////////////////////////////////////////////////////////////////
# DATASET EXPLORATION —————————————————————————————————————————————————————————————————————————
# \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
# ——————————————————————————————————————————————————————————————————————————————————————————————
Monthly_temperature <- data.frame(read_excel("dataset_Creation/Monthly_temperature.xlsx"))
Carbon_data <- data.frame(read_excel("dataset_Creation/Carbon Emission Tons.xlsx")[-1,])[-265,]
Years.Temperature <- Monthly_temperature[,1]
Monthly_temperature_d <- Monthly_temperature[,-1]
rownames(Monthly_temperature_d) <- Years.Temperature
dim(Monthly_temperature_d)
Years.Carbon <- Carbon_data[,1]
Carbon_data_d <- Carbon_data[,-1]
rownames(Carbon_data_d) <- Years.Carbon
dim(Carbon_data_d)
data <- t(rbindlist(list(Carbon_data_d=data.frame(t(Carbon_data_d)),
Monthly_temperature_d=data.frame(t(Monthly_temperature_d))),
use.names=TRUE,
fill=TRUE))
Years.Span.min <- c(min(Years.Temperature),min(Years.Carbon))
Years.Span.max <- c(max(Years.Temperature),max(Years.Carbon))
Dates <- seq(from=min(Years.Span.min),
to=max(Years.Span.max),
by=1)
Variable.Titles <- c("Total","Gas","Liquids","Solids","Production","Flaring","Capita","jan","feb","mar","apr","may","jun","july","aug","sep",'oct','nov','dec')
rownames(data) <- Dates
colnames(data) <- Variable.Titles
data
##################################################################
#################################### This would be the spline estimates for the missing months data assuming first data = January##############################
Carbon_Month = spline(CarbonEmissions,y=NULL, n =12*length(CarbonEmissions))$y
library(readxl)
install.packages('readxl')
library(readxl)
install.packages('data.table')
# ----------------------------------------------------------------------------------------------------
# MAST 679H - Final Project
# ----------------------------------------------------------------------------------------------------
# Presented by
# Taban AKBARZADEH
# Edwin H. NG
# Gabriel LEMYRE
# Remi VINCENT
# ----------------------------------------------------------------------------------------------------
# Presented to
#Frederic GODIN
# ----------------------------------------------------------------------------------------------------
# April 15th, 2018
# ----------------------------------------------------------------------------------------------------
rm(list=ls())
#set working directory
path <- '~/Documents/GitHub/MAST679H/Final_Project'
setwd(path.expand(path)) # Setting path
options(max.print=100000)
source('tabMaker.R')
#install.packages('MASS')
library('MASS')
#install.packages('readxl')
library(readxl)
#install.packages('data.table')
library(data.table) # Package to use rbindlist()
# Format scientifique pour les valeurs numériques avec maximum d décimales
Sc.Format <- function(obj,d){
Sc.Format <- formatC(obj, format = "e", digits = d)
}
# Rounding with n zeros function <- Returns a string and not a numeric type
s <- function(x,n){
sprintf("%.3f", round(x,n))
}
# ——————————————————————————————————————————————————————————————————————————————————————————————
# //////////////////////////////////////////////////////////////////////////////////////////////
# DATASET EXPLORATION —————————————————————————————————————————————————————————————————————————
# \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
# ——————————————————————————————————————————————————————————————————————————————————————————————
Monthly_temperature <- data.frame(read_excel("dataset_Creation/Monthly_temperature.xlsx"))
Carbon_data <- data.frame(read_excel("dataset_Creation/Carbon Emission Tons.xlsx")[-1,])[-265,]
Years.Temperature <- Monthly_temperature[,1]
Monthly_temperature_d <- Monthly_temperature[,-1]
rownames(Monthly_temperature_d) <- Years.Temperature
dim(Monthly_temperature_d)
Years.Carbon <- Carbon_data[,1]
Carbon_data_d <- Carbon_data[,-1]
rownames(Carbon_data_d) <- Years.Carbon
dim(Carbon_data_d)
data <- t(rbindlist(list(Carbon_data_d=data.frame(t(Carbon_data_d)),
Monthly_temperature_d=data.frame(t(Monthly_temperature_d))),
use.names=TRUE,
fill=TRUE))
Years.Span.min <- c(min(Years.Temperature),min(Years.Carbon))
Years.Span.max <- c(max(Years.Temperature),max(Years.Carbon))
Dates <- seq(from=min(Years.Span.min),
to=max(Years.Span.max),
by=1)
Variable.Titles <- c("Total","Gas","Liquids","Solids","Production","Flaring","Capita","jan","feb","mar","apr","may","jun","july","aug","sep",'oct','nov','dec')
rownames(data) <- Dates
colnames(data) <- Variable.Titles
data
##################################################################
#################################### This would be the spline estimates for the missing months data assuming first data = January##############################
Carbon_Month = spline(CarbonEmissions,y=NULL, n =12*length(CarbonEmissions))$y
Years.Span.min <- c(min(Years.Temperature),min(Years.Carbon))
Years.Span.max <- c(max(Years.Temperature),max(Years.Carbon))
Dates <- seq(from=min(Years.Span.min),
to=max(Years.Span.max),
by=1)
Years.Temperature
Years.Carbon
Years.Carbon
Years.Temperature
Dates <- seq(from=min(Years.Span.min),
to=max(Years.Span.max),
by=1)
min(Years.Span.min)
Years.Span.max <- numeric(max(Years.Temperature),max(Years.Carbon))
Monthly_temperature <- data.frame(read_excel("dataset_Creation/Monthly_temperature.xlsx"))
Carbon_data <- data.frame(read_excel("dataset_Creation/Carbon Emission Tons.xlsx")[-1,])[-265,]
Years.Temperature <- Monthly_temperature[,1]
Monthly_temperature_d <- Monthly_temperature[,-1]
rownames(Monthly_temperature_d) <- Years.Temperature
dim(Monthly_temperature_d)
Years.Carbon <- as.numeric(Carbon_data[,1])
Carbon_data_d <- Carbon_data[,-1]
rownames(Carbon_data_d) <- Years.Carbon
dim(Carbon_data_d)
data <- t(rbindlist(list(Carbon_data_d=data.frame(t(Carbon_data_d)),
Monthly_temperature_d=data.frame(t(Monthly_temperature_d))),
use.names=TRUE,
fill=TRUE))
Years.Span.min <- c(min(Years.Temperature),min(Years.Carbon))
Years.Span.max <- c(max(Years.Temperature),max(Years.Carbon))
Dates <- seq(from=min(Years.Span.min),
to=max(Years.Span.max),
by=1)
Variable.Titles <- c("Total","Gas","Liquids","Solids","Production","Flaring","Capita","jan","feb","mar","apr","may","jun","july","aug","sep",'oct','nov','dec')
rownames(data) <- Dates
colnames(data) <- Variable.Titles
data
# Rounding with n zeros function <- Returns a string and not a numeric type
s <- function(x,n){
sprintf("%.3f", round(x,n))
}
days <- paste(s(1:30),4)
days
# Rounding with n zeros function <- Returns a string and not a numeric type
s <- function(x,n){
sprintf("%3f.", round(x,n))
}
days <- paste(s(1:30),4)
days
# Rounding with n zeros function <- Returns a string and not a numeric type
s <- function(x,n){
sprintf("%.3f", round(x,n))
}
days <- paste(s(1:30),4)
days
# Rounding with n zeros function <- Returns a string and not a numeric type
s <- function(x,n){
sprintf("%.3f", round(x,n))
}
days <- paste(s(1:30,1),4)
days
# Rounding with n zeros function <- Returns a string and not a numeric type
s <- function(x,n){
sprintf("%.1f", round(x,n))
}
days <- paste(s(1:30,1),4)
days
# Rounding with n zeros function <- Returns a string and not a numeric type
s <- function(x,n){
sprintf("%.1f", round(x,n))
}
days <- paste(s(1:30,5),4)
days
# Rounding with n zeros function <- Returns a string and not a numeric type
s <- function(x,n){
sprintf("%.1f", round(x,n))
}
days <- paste(s(1:30,5),4)
days
# Rounding with n zeros function <- Returns a string and not a numeric type
s <- function(x,n,dec=3){
sprintf("%.decf", round(x,n))
}
days <- paste(s(1:30,5),4)
days
# Rounding with n zeros function <- Returns a string and not a numeric type
s <- function(x,n,dec=3){
sprintf(paste("%.",dec,"f",sep=""), round(x,n))
}
days <- paste(s(1:30,5),4)
days
# Rounding with n zeros function <- Returns a string and not a numeric type
s <- function(x,n,dec=3){
sprintf(paste("%.",dec,"f",sep=""), round(x,n))
}
days <- paste(s(1:30,5,5),4)
days
# Rounding with n zeros function <- Returns a string and not a numeric type
s <- function(x,n,dec=3){
sprintf(paste("%.",dec,"f",sep=""), round(x,n))
}
days <- paste(s(1:30,5,1),4)
days
# Rounding with n zeros function <- Returns a string and not a numeric type
s <- function(x,dec=3){
sprintf(paste("%.",dec,"f",sep=""), round(x,dec))
}
days <- paste(s(1:30,5,1),4)
days
# Rounding with n zeros function <- Returns a string and not a numeric type
s <- function(x,dec=3){
sprintf(paste("%.",dec,"f",sep=""), round(x,dec))
}
days <- paste(s(1:30,5),4)
days
# Rounding with n zeros function <- Returns a string and not a numeric type
s <- function(x,dec=3){
sprintf(paste("%.",dec,"f",sep=""), round(x,dec))
}
days <- paste(s(1:30,2),4)
days
# Rounding with n zeros function <- Returns a string and not a numeric type
s <- function(x,dec=3){
sprintf(paste("%.",dec,"f",sep=""), round(x,dec))
}
days <- paste(s(1:30,0),4)
days
# Rounding with n zeros function <- Returns a string and not a numeric type
s <- function(x,dec=3){
sprintf(paste("%.",dec,"f",sep=""), round(x,dec))
}
days <- paste(s(1:30,-1),4)
days
s(1:30,-1)
days <- paste(1:30,4)
# Rounding with n zeros function <- Returns a string and not a numeric type
s <- function(x,dec=3){
sprintf(paste("%.",dec,"f",sep=""), round(x,dec))
}
days <- paste(1:30,4)
days
df = data.frame(date=c("2012-02-01", "2012-02-01", "2012-02-02"))
df$day <- weekdays(as.Date(df$date))
df
Sequence.Date <- paste("2018-04-",1:30)
Sequence.Date
Sequence.Date <- paste("2018-04-",1:30,sep='')
df = data.frame(date=c("2012-02-01", "2012-02-01", "2012-02-02"))
df$day <- weekdays(as.Date(df$date))
df
Sequence.Date <- paste("2018-04-",1:30,sep='')
df = data.frame(date=Sequence.Date)
df$day <- weekdays(as.Date(df$date))
df
df <- data.frame(Year=2018)
df$Month <- 'April'
df$Day <- 1:30
Sequence.Date <- paste(df$Year,df$Month,1:30,sep='')
df$date=Sequence.Date
df$day <- weekdays(as.Date(df$date))
df
df <- data.frame(Year=2018)
df$Month <- 'April'
df$Day <- 1:30
Sequence.Date <- paste(df$Year,df$Month,df$Day,sep='')
df$date=Sequence.Date
df$day <- weekdays(as.Date(df$date))
df
df$Day
df
n <- 30
df <- data.frame(Year=rep(2018,n))
df$Month <- rep('April',n)
df$Day <- 1:n
Sequence.Date <- paste(df$Year,df$Month,df$Day,sep='')
df$date=Sequence.Date
df$day <- weekdays(as.Date(df$date))
df
n <- 30
df <- data.frame(Year=rep(2018,n))
df$Month <- rep('April',n)
df$Day <- 1:n
Sequence.Date <- paste(df$Year,as.numeric(df$Month),df$Day,sep='')
df$date=Sequence.Date
df$day <- weekdays(as.Date(df$date))
df
n <- 30
df <- data.frame(Year=rep(2018,n))
df$Month <- rep('April',n)
Month.Num <- 4
df$Day <- 1:n
Sequence.Date <- paste(df$Year,Month.Num,df$Day,sep='')
df$date=Sequence.Date
df$day <- weekdays(as.Date(df$date))
df
Sequence.Date
n <- 30
df <- data.frame(Year=rep(2018,n))
df$Month <- rep('April',n)
Month.Num <- 4
df$Day <- 1:n
Sequence.Date <- paste(df$Year,'-',Month.Num,'-',df$Day,sep='')
df$date=Sequence.Date
df$day <- weekdays(as.Date(df$date))
df
setwd('~/Documents/GitHub/PocketCalendar')
n <- 30
df <- data.frame(Year=rep(2018,n))
df$Month <- rep('April',n)
Month.Num <- 4
df$Day <- 1:n
Sequence.Date <- paste(df$Year,'-',Month.Num,'-',df$Day,sep='')
df$date=Sequence.Date
df$day <- weekdays(as.Date(df$date))
df
write.table(df, "Calendar.txt", sep="\t", col.names = F, row.names = F)
setwd('~/Documents/GitHub/PocketCalendar')
n <- 30
df <- data.frame(Year=rep(2018,n))
df$Month <- rep('April',n)
Month.Num <- 4
df$Day <- 1:n
Sequence.Date <- paste(df$Year,'-',Month.Num,'-',df$Day,sep='')
df$date=Sequence.Date
df$day <- weekdays(as.Date(df$date))
df
write.table(df, "Calendar.txt", sep="\t", col.names = T, row.names = F)
